# .bashrc

# User specific aliases and functions

# Basic stuff
export PAGER=less
export EDITOR=vim
export LC_COLLATE="C" # changes way files are ordered
export ROWS
export COLUMNS

# Add entries to path, only if they don't exist yet
_back_path () {
   export PATH=$PATH:$1
}
_front_path () {
   export PATH=$1:$PATH
}
back_path () {
   [[ -z $(echo $PATH | grep "^$1:\|:$1:\|:$1\$") ]] && _back_path "$1"
}
front_path () {
   [[ -z $(echo $PATH | grep "^$1:\|:$1:\|:$1\$") ]] && _front_path "$1"
}

# strip /usr/local/sbin out of PATH
export PATH=${PATH/:\/usr\/local\/sbin/}

# BASH COMPLETION
[ -f /opt/homebrew/etc/profile.d/bash_completion.sh ] && . /opt/homebrew/etc/profile.d/bash_completion.sh

front_path $HOME/bin
if which pyenv >/dev/null 2>&1; then
   front_path $(pyenv root)/shims
fi
front_path /opt/homebrew/opt/ruby/bin

# default umask
export UMASK_DEFAULT=0022
umask $UMASK_DEFAULT

# less settings (mostly for man pages)
export LESS_TERMCAP_mb=$'\E[01;31m' # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m' # begin bold
export LESS_TERMCAP_me=$'\E[0m' # end mode
export LESS_TERMCAP_se=$'\E[0m' # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m' # begin standout-mode - info box 
export LESS_TERMCAP_ue=$'\E[0m' # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m' # begin underline

# java
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.7.0_75.jdk/Contents/Home

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh"
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && . "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

###########
# aliases #
###########
if [ -f ~/.bashrc_aliases ]
then
   . ~/.bashrc_aliases
fi

#############
# functions #
#############

#
# prints smiley on prompt to indicate success/fail of last cmd
#
smileyc () {
  STAT=$?
  if [ $STAT = 0 ]; then
    echo -e '\033[32m'
  else
    echo -e '\033[0m'
  fi
  return $STAT
}
smiley () {
  STAT=$?
  #DEBUG:
  if [ $1 ]
  then
    STAT="$1"
  fi

  if [ $STAT = 0 ]; then
    echo ":-)"
  else
    # error status
    # default is to display numerical status
    # but for certain ones, we display the "special meaning"
    SDISP=`printf "%03d" "$STAT"`
    case "$STAT" in
      125) SDISP="SVR" ;;
      126) SDISP="NOEX" ;;
      127) SDISP="NOCMD" ;;
      128) SDISP=" -1" ;;
      129) SDISP="FATAL1" ;;
      130) SDISP="FATAL2" ;;
      131) SDISP="QUIT" ;;
      132) SDISP="ILL" ;;
      133) SDISP="TRAP" ;;
      134) SDISP="ABORT" ;;
      135) SDISP="BUS" ;;
      136) SDISP="FPE" ;;
      137) SDISP="KILL" ;;
      139) SDISP="SEG" ;;
      141) SDISP="PIPE" ;;
      142) SDISP="ALRM" ;;
      143) SDISP="TERM" ;;
      148) SDISP="STP" ;;
      152) SDISP="XCPU" ;;
      159) SDISP="SYS" ;;
    esac
    echo "$SDISP"
  fi
  return $STAT
}

#
# prints indication on prompt if asciinema is recording
#
psasciinema() {
   [ -n "$ASCIINEMA_REC" ] && echo -n "[REC]"
}

export GROUP_DEFAULT=20
#
# prints current group on prompt, if it is not default
#
psgroup() {
   local group=$(id -g)
   [ "$group" -ne "$GROUP_DEFAULT" ] && echo -n "[g:$group]"
}

#
# prints current group on prompt, if it is not default
#
psumask() {
   local umask=$(umask)
   [ "$umask" -ne "$UMASK_DEFAULT" ] && echo -n "[u:$umask]"
}

#
# set title to something static
#
title() {
   export TITLE="$1"
}

#
# sets title of screen shell dynamically
#
screen_title() {
   if [ "$1" = "debug" ]
   then
      ECHOCMD="echo -n"
   else
      ECHOCMD="echo -ne"
   fi

   if [ "$TITLE" ]
   then
      $ECHOCMD "\033k${TITLE}\033\\"
      return
   fi

   # get a nice CWD
   CWD=${PWD##*/}
   if [ "$PWD" = ~ ]
   then
      # if we're in home, set title to "~"
      CWD="~"
   elif [ "$CWD" = "src" -o "$CWD" = "lib" -o "$CWD" = "test" -o "$CWD" = "bin" ]
   then
      # append parent directory
      CWD=`echo $PWD | awk -F/ '{printf "%s/%s", $(NF-1), $NF}'`
      true
   fi

   if [ "$SSH_TTY" ] && [ ! "$STY" ]
   then
      # we are in non-screen SSH session, set title to hostname
      $ECHOCMD "\033k${CWD}@${HOSTNAME%%.*}\033\\"
      return
   fi

   # default, echo basename of CWD
   $ECHOCMD "\033k${CWD}\033\\"
}

git_ps1_wrap() {
   if declare -f __git_ps1 >/dev/null; then
      __git_ps1 "[%s]"
   fi
}

##########
# prompt #
##########
red='\[\e[31m\]'
green='\[\e[32m\]'
magenta='\[\e[35m\]'
yellow='\[\e[33m\]'
white='\[\e[37m\]'

# set prompt to magenta if in non-screen ssh
pscore='\u@\h:\W'"\n"'\$'
if [ "$SSH_TTY" ] && [ ! "$STY" ]
then
   pscolor=$magenta
   psalt=$red
elif [ -n "$ASCIINEMA_REC" ]
then
   pscore='\W'"\n"'\$'
   pscolor=$green
   psalt=$red
else
   pscolor=$red
   psalt=$magenta
fi

# if this is an interactive shell, set PS1 to something decent
if [ "$PS1" ]; then

   # Git completion stuff
   GIT_PS1_SHOWDIRTYSTATE=1
   GIT_PS1_SHOWSTASHSTATE=1
   GIT_PS1_SHOWUNTRACKEDFILES=1
   GIT_PS1_SHOWUPSTREAM=auto

   # my default red prompt
   PS1=
   PS1="$PS1\n"                                  # newline
   PS1="$PS1$pscolor"                            # pscolor
   PS1="$PS1"'[\j]'                              # jobs
   PS1="$PS1"'[\[`smileyc`\]'                    # [ GREEN | GREY
   PS1="$PS1"'`smiley`'                          # :) | :(
   PS1="$PS1$pscolor"']'                         # pscolor ]
   PS1="$PS1$psalt"                              # psalt
   PS1="$PS1$white"'`psasciinema`'"$pscolor"     # [REC] (if asciinema recording)
   PS1="$PS1"'`psgroup`'                         # [group] (if not default)
   PS1="$PS1"'`psumask`'                         # [umask] (if not default)
   PS1="$PS1$pscolor"                            # pscolor
   PS1="$PS1$yellow"'$(git_ps1_wrap)'"$pscolor"  # [GIT_BRANCH]
   PS1="$PS1$pscore"                             # user@host:dir $
   PS1="$PS1"'\[\e[0m\] '                        # GREY

  case $TERM in
    xterm*)
      PS1="$PS1"'\[\033]0;`'
      PS1="$PS1"'echo "$HOSTNAME" | tr "[:upper:]" "[:lower:]"'
      PS1="$PS1"'` \w\007\]'
      ;;
    screen)
      # title-escape-sequence for screen's dynamic title feature
      PS1="$PS1"'\[`screen_title`\]'
      #PROMPT_COMMAND='screen_title'
      ;;
  esac

  # Note: Do not export PS1.  It is just for this shell, not its children.

  # also only set these if interactive shell, and not Apple Terminal
  if [ "$TERM_PROGRAM" != "Apple_Terminal" ]
  then
    shopt -s cdspell              # sloppy dir spelling for cd
    shopt -s dirspell 2>/dev/null # sloppy dir spelling for tab completion
  fi
fi
